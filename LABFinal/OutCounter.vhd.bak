Library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_signed.all;
ENTITY OutCounter IS
	PORT(
		clk	:IN STD_LOGIC;
		reset_n	:IN STD_LOGIC;
		L2, L1	:OUT STD_LOGIC;
		inverte	:OUT STD_LOGIC
END OutCounter;


ARCHITECTURE funcionamento OF OutCounter IS
	TYPE STATE_TYPE IS (s0,s1,s2,s3);
	SINGAL estado	:STATE_TYPE;

	
BEGIN
	PROCESS(clk,reset)
	BEGIN
		IF reset_n = '0' THEN
			estado <= s0;
		ELSIF(clk'EVENT AND clk = '1') THEN -- rising edge
			CASE estado IS
				WHEN s0=>
					estado <= s1; -- Acende L2
				WHEN s1=>
					estado <= s2; -- Acende L1 e mantem L2 aceso
				WHEN s2=>
					estado <= s3; -- Batedor saiu num strikeout
				WHEN s3=>
					estado <= s0 -- Prepara para o novo batedor
			END CASE;
		END IF;
	END PROCESS;
	
	
	
	PROCESS (estado)
	BEGIN
		CASE estado IS
			WHEN s0=>
				L4<= '0';
				L5<= '0';
				fora <='0';
			WHEN S1=>
				L4 <= '1';
			WHEN s2=>
				L5 <= '1';
			when s3=>
				L4<= '0';
				L5<= '0';
				inverte <="0001";		
		END CASE;
	END PROCESS;
	
END funcionamento;